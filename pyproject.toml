[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "swagger-plugin-for-sphinx"
version = "5.1.2"
description = "Sphinx plugin which renders a OpenAPI specification with Swagger"
authors = [{ name = "Kai Harder", email = "kai.harder@sap.com" }]
readme = "README.md"
keywords = ["sphinx", "swagger", "plugin", "openapi"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Typing :: Typed",
]
requires-python = ">=3.9,<4"
dependencies = ["sphinx>=6.0,<9", "jinja2~=3.0", "docutils", "typing_extensions~=4.5"]
license = "Apache-2.0"
license-files = ["LICENSE"]

[project.urls]
"Issue Tracker" = "https://github.com/SAP/swagger-plugin-for-sphinx/issues"
"Changelog" = "https://github.com/SAP/swagger-plugin-for-sphinx/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pre-commit==4.2.0",
    "pylint==3.3.7",
    "black==25.1.0",
    "isort==6.0.1",
    "flake8==7.3.0",
    "flake8-tergeo==25.7.9.0",
    "mypy==1.16.1",
    "types-docutils==0.21.0.20250710",
    "yesqa==1.5.0",
    "types-PyYAML==6.0.12.20250516",
    "pyupgrade==3.20.0",
]
test = [
    "pytest==8.4.1",
    "coverage==7.9.2",
    "diff-cover==9.5.0",
    "pytest-cov==6.2.1",
    "selenium==4.34.2",
    "pyyaml==6.0.2",
]

[tool.setuptools.packages.find]
include = ["swagger_plugin_for_sphinx"]

[tool.setuptools.package-data]
swagger_plugin_for_sphinx = ["py.typed", "*.j2"]

[tool.isort]
profile = "black"
add_imports = ["from __future__ import annotations"]

[tool.mypy]
# main config
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_unreachable = true
strict = true
warn_unused_ignores = true
enable_error_code = ["explicit-override", "possibly-undefined", "ignore-without-code", "deprecated"]
strict_bytes = true
# output
pretty = true
show_column_numbers = true
show_error_codes = true
show_traceback = true

[tool.pylint.basic]
no-docstring-rgx = "^_"

[tool.pylint.design]
min-public-methods = 0

[tool.pylint.master]
max-line-length = 100
py-version = [3, 9]

[tool.pylint."messages control"]
enable = ["all"]
disable = [
    # allow TODO comments
    "fixme",
    # allow disables
    "locally-disabled",
    "suppressed-message",
    # disable too-many checks
    "too-many-positional-arguments",
    "too-many-locals",
]

[tool.pylint.reports]
reports = false

[tool.pylint.similarities]
ignore-imports = true

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true

[tool.diff_cover]
include_untracked = true
fail_under = 90

[tool.pytest.ini_options]
markers = ["integration: integration tests"]
xfail_strict = true
addopts = "--strict-markers"
